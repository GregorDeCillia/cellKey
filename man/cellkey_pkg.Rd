% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/cellkey_pkg.R
\name{cellkey_pkg}
\alias{cellkey_pkg}
\alias{ck_setup}
\title{cellKey - an post-tabular perturbation method}
\format{\link[R6:R6Class]{R6::R6Class} object.}
\usage{
ck_setup(x, rkey, dims, w, countvars = NULL, numvars = NULL)
}
\arguments{
\item{x}{an object coercible to a \code{data.frame}}

\item{rkey}{either a column name within \code{x} referring to a variable containing record keys
or a single integer(ish) number > \code{5} that referns to the number of digits for record keys that
will be generated internally.}

\item{dims}{a list containing slots for each variable that should be
tabulated. Each slot consists should be created/modified using \code{\link[sdcHierarchies:hier_create]{sdcHierarchies::hier_create()}},
\code{\link[sdcHierarchies:hier_add]{sdcHierarchies::hier_add()}} and other functionality from package \code{sdcHierarchies}.}

\item{w}{(character) a scalar character referring to a variable in \code{x} holding sampling
weights. If \code{w} is \code{NULL} (the default), all weights are assumed to be \code{1}}

\item{countvars}{(character) an optional vector containing names of binary (0/1 coded)
variables withing \code{x} that should be included in the problem instance.
These variables can later be perturbed.}

\item{params_cnts}{an object containing perturbation parameters for count variables that needs
to be created with \code{\link[=ck_params_cnts]{ck_params_cnts()}}}
}
\description{
This class allows to define statistical tables and perturb both
count and numerical variables.
}
\section{Usage}{
 For usage details see the \strong{Methods} and \strong{Examples} sections.
}

\section{Methods}{
 The following methods are available and can be used:
\itemize{
\item \strong{\code{print()}}: prints information about the current table
\item \strong{\code{summary()}}: some aggregated summary statistics about perturbed variables
\item \strong{\code{perturb(v)}}: Perturb a count- or magnitude variable. The method has the following arguments:
\itemize{
\item \code{v}: name(s) of count or magnitude variables that should be perturbed.
}
\item \strong{\code{freqtab(v)}}: get results from already perturbed count variables as a \code{data.table}. The required arguments are:
\itemize{
\item \code{v}: a vector of variable names for already perturbed count variables
\item \code{type}: a scalar character depending what variables should be available in the output. Allowed
values are \code{"both"} (the default), \code{"weighted"} and \code{"unweighted"}
\item \code{path}: if not \code{NULL}, a scalar character defining a (relative or absolute) path to which the result table
should be written. A \code{csv} file will be generated and \code{.csv} will be appended to the value provided.
}

This method returns a \code{data.table} containing all combinations of the dimensional variables in
the first n columns. Additionally, the following columns are shown:
\itemize{
\item \code{vname}: name of the perturbed variable
\item \code{uwc}: unweighted counts (if \code{type} is \code{"both"} or \code{"unweighted"})
\item \code{wc}: weighted counts (if \code{type} is \code{"both"} or \code{"weighted"})
\item \code{puwc}: perturbed unweighted counts (if \code{type} is \code{"both"} or \code{"unweighted"})
\item \code{pwc}: perturbed weighted counts (if \code{type} is \code{"both"} or \code{"weighted"})
}
\item \strong{\code{measures_cnts(v, exclude_zeros = TRUE)}}: utility measures for perturbed count variables. The required arguments are:
\itemize{
\item \code{v}: name of a count variable for which utility measures should be computed.
\item \code{exclude_zeros}: should empty (zero) cells in the original values be excluded when computing distance measures
This method returns a \code{list} containing a set of utility measures based on some distance functions.
For a detailed description of the computed measures, see \code{\link[=ck_cnt_measures]{ck_cnt_measures()}}
}
\item \strong{\code{mod_cnts()}}: returns a \code{data.table} containing modifications applied to count variables
\item \strong{\code{params_cnts_get()}}: returns a named list in which each list-element contains the active perturbation parameters for the
specific variable defined by the list-name.
\item \strong{\code{params_cnts_set(val, v = NULL)}}: allows to set perturbation parameters for count variables. The following arguments
are expected:
\itemize{
\item \code{val}: a perturbation object created with \code{\link[=ck_params_cnts]{ck_params_cnts()}}
\item \code{v}: a character vector (or \code{NULL}). If \code{NULL (the default)}, the perturbation parameters provided in \code{val} are set for
all count variables; otherwise one may specify the names of the count variables for which the parameters should be set.
}
}
}

\examples{
x <- ck_create_testdata()

# create some 0/1 variables that should be perturbed later
x[, cnt_females := ifelse(sex == "male", 0, 1)]
x[, cnt_males := ifelse(sex == "male", 1, 0)]
x[, cnt_highincome := ifelse(income >= 9000, 1, 0)]

# create record keys
x$rkey <- ck_generate_rkeys(dat = x)

# define required inputs

# hierarchy with some bogus codes
d_sex <- hier_create(root = "Total", nodes = c("male", "female"))
d_sex <- hier_add(d_sex, root = "female", "f")
d_sex <- hier_add(d_sex, root = "male", "m")

d_age <- hier_create(root = "Total", nodes = paste0("age_group", 1:6))
d_age <- hier_add(d_age, root = "age_group1", "ag1a")
d_age <- hier_add(d_age, root = "age_group2", "ag2a")

# create a named list
dims <- list(sex = d_sex, age = d_age)
w <- "sampling_weight"
countvars <- c("cnt_females", "cnt_males", "cnt_highincome")
rkey <- "rkey"

# define the cell key object
tab <- ck_setup(
  x = x,
  rkey = 5,
  dims = dims,
  w = w,
  countvars = countvars)

# show some information about this table instance
print(tab) # identical with tab$print()

# add perturbation parameters for "total" variable
p_cnts1 <- ck_params_cnts(
  D = 5,
  V = 3,
  js = 2,
  pstay = 0.5,
  optim = 1,
  mono = TRUE)
tab$params_cnts_set(val = p_cnts1, v = "total")

# create alternative perturbation parameters
p_cnts2 <- ck_params_cnts(
  D = 8,
  V = 3,
  js = 2,
  pstay = 0.5,
  optim = 1,
  mono = TRUE)

# use it for the remaining variables#'
tab$params_cnts_set(val = p_cnts2, v = countvars)

# perturb a variable
tab$perturb(v = "total")

# multiple variables can be perturbed as well
tab$perturb(v = c("cnt_males", "cnt_highincome"))

# return results (weighted and unweighted)
tab$freqtab(v = c("total", "cnt_males"))

# only unweighted and perturbed unweighted counts
tab$freqtab(v = c("total", "cnt_males"), type = "unweighted")

# write to a file "outtab.csv" (.csv is automatically added to the path)
\dontrun{
tab$freqtab(v = c("total", "cnt_males"), path = "outtab")
}

# only weighted and perturbed weighted counts
tab$freqtab(v = c("total", "cnt_males"), type = "weighted")

# utility measures for a count variable
tab$measures_cnts(v = "total", exclude_zeros = TRUE)

# modifications for perturbed count variables
tab$mod_cnts()

# display a summary about utility measures
tab$summary()
}
