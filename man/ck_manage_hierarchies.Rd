% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/ck_manage_hierarchies.R
\name{ck_manage_hierarchies}
\alias{ck_manage_hierarchies}
\alias{ck_create_node}
\alias{ck_add_nodes}
\alias{ck_delete_nodes}
\title{Create and modify the structure of hierarchies}
\usage{
ck_create_node(total_lab = "Total")

ck_add_nodes(node, node_labs, reference_node)

ck_delete_nodes(node, node_labs, reference_node)
}
\arguments{
\item{total_lab}{the name of the overall total (summation over all contributing)}

\item{node}{an object as created in \code{ck_create_node()} or returned from
\code{ck_add_nodes()} or \code{ck_delete_nodes()}.}

\item{node_labs}{character name(s) of new elements that should be inserted to or
deleted from a hierarchical structure}

\item{reference_node}{character name of an existing node in the hierarchical
structure. When using \code{ck_add_nodes()}, the new elements are created as children
of the reference node. In \code{ck_delete_nodes()}, all children of the reference node that
match the names with argument \code{node_labs} are deleted from the hierarchy.}
}
\value{
a \code{Node} object that can be used to specify a hierarchy used
to define table inputs in \code{\link{perturbTable}}.
}
\description{
Functions \code{ck_create_nodes()}, \code{ck_add_nodes()}
and \code{ck_delete_nodes()} allow to define and modify hierarchical structures
represented as trees. These objects can be used in \code{\link{perturbTable}} to
define the (hierarchical) structure of tables.
}
\examples{
dim <- ck_create_node(total_lab = "Total")
dim <- ck_add_nodes(
  dim,
  reference_node = "Total",
  node_labs = LETTERS[1:4]
)
print(dim)

# add some levels below "A" and "C"
dim <- ck_add_nodes(
  dim,
  reference_node = "A",
  node_labs = paste0("a", 1:5)
)
dim <- ck_add_nodes(
  dim,
  reference_node = "C",
  node_labs = paste0("c", 1:5)
)
print(dim)

# delete some specific levels
dim <- ck_delete_nodes(
  dim,
  reference_node = "A",
  node_labs = c("a1", "a4")
)
print(dim)

# delete entire subtree
dim <- ck_delete_nodes(
  dim,
  reference_node = "Total",
  node_labs = c("C")
)
print(dim)
plot(dim)
}
